name: Generate snake game

on:
  schedule:
    - cron: "* */12 * * *"
  workflow_dispatch:

jobs:
  build:
    name: Jobs to update datas
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Permissão para push

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Garante que todo o histórico do branch seja baixado

      # Gerar a animação do Snake
      - name: Generate Snake animation
        uses: Sutil/snk@master
        id: snake-gif
        with:
          github_user_name: ${{ github.repository_owner }}
          svg_out_path: dist/github-contribution-grid-snake2.svg
          snake_color: 'blue'

      # Sincronizar com o branch remoto antes do push
      - name: Fetch latest changes
        run: |
          git fetch origin output || true
          git checkout output || git checkout -b output
          git reset --hard origin/output || true

      # Configurar identidade do GitHub Actions
      - name: Configure Git identity
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      # Commit das mudanças
      - name: Commit changes
        run: |
          git add .
          git commit -m "Atualização automática do Snake Game" || echo "Nenhuma mudança para commit"

      # Forçar push no branch `output`
      - name: Push changes
        run: |
          git push origin output --force

      # Publicar no GitHub Pages
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
